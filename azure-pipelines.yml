trigger:
- master

pool:
  name: $(Agent)

steps:
- script: echo "🚀 Deploy to AKS starting..."
  displayName: 'Print Deployment Start'

# Optional: Install Azure CLI on the self-hosted agent (if not pre-installed)
- task: Bash@3
  displayName: 'Install Azure CLI (if not present)'
  inputs:
    targetType: 'inline'
    script: |
      if ! command -v az &> /dev/null
      then
        echo "Azure CLI not found. Installing..."
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      else
        echo "✅ Azure CLI already installed: $(az version)"
      fi

# Use Azure CLI to get AKS credentials
- task: AzureCLI@2
  inputs:
    azureSubscription: 'Azure service' 
    scriptType: 'bash'                 
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "🔐 Logging in and setting AKS credentials..."
      az aks get-credentials \
        --resource-group $(resource-group) \
        --name $(KubernetesCluster-Name) \
        --overwrite-existing
  displayName: 'Get AKS Credentials'

  #Install Helm on Agent
- task: Bash@3
  displayName: 'Install Helm on Agent'
  inputs:
    targetType: 'inline'
    script: |
      echo "🔍 Checking if Helm is already installed..."
      if ! command -v helm &> /dev/null
      then
        echo "📦 Installing Helm..."
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      else
        echo "✅ Helm is already installed: $(helm version)"
      fi

#Install NGINX Ingress via Helm in AKS 
- task: AzureCLI@2
  displayName: 'Install NGINX Ingress via Helm in AKS'
  inputs:
    azureSubscription: '$(AzureSubscriptionConnection)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az aks get-credentials \
        --resource-group $(resource-group) \
        --name $(KubernetesCluster-Name) \
        --overwrite-existing
      
      echo "📦 Installing NGINX Ingress Controller using Helm..."
      helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      helm repo update
      helm install nginx-ingress ingress-nginx/ingress-nginx \
        --namespace ingress-nginx --create-namespace



- task: AzureCLI@2
  inputs:
    azureSubscription: 'Azure service'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Getting AKS credentials..."
            az aks get-credentials \
              --resource-group $(resource-group) \ 
              --name $(KubernetesCluster-Name) \             
              --overwrite-existing
      
            echo "Creating Argo CD namespace..."
            kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
      
            echo "Installing Argo CD using manifests..."
            kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml
      
            echo "✅ Argo CD installed in AKS!"

# Deploy Kubernetes manifest
# - task: KubernetesManifest@1
#   inputs:
#     action: 'deploy'
#     connectionType: '$(ServiceConnection)'
#     azureSubscriptionConnection: '$(AzureSubscriptionConnection)'
#     azureResourceGroup: '$(resource-group)'
#     kubernetesCluster: '$(KubernetesCluster-Name)'
#     namespace: '$(NameSpace-manifests)'
#     manifests: '$(Manifests)'
#   displayName: 'Deploy to AKS'
