trigger:
- master

pool:
  name: $(Agent)

variables:
  helmNamespace: helm
  argoNamespace: argocd

steps:

- script: echo "🚀 Starting AKS deployment..."
  displayName: 'Print Start Message'

# Ensure Azure CLI is installed
- task: Bash@3
  displayName: 'Install Azure CLI (if not installed)'
  inputs:
    targetType: 'inline'
    script: |
      if ! command -v az &> /dev/null; then
        echo "Installing Azure CLI..."
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      else
        echo "✅ Azure CLI is already installed."
      fi

# Get AKS credentials
- task: AzureCLI@2
  displayName: 'Get AKS Credentials'
  inputs:
    azureSubscription: 'Azure service'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "🔐 Fetching AKS credentials..."
      az aks get-credentials \
        --resource-group $(resource-group) \
        --name $(KubernetesCluster-Name) \
        --overwrite-existing

# Install Helm
- task: Bash@3
  displayName: 'Install Helm (if not installed)'
  inputs:
    targetType: 'inline'
    script: |
      if ! command -v helm &> /dev/null; then
        echo "📦 Installing Helm..."
        curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
      else
        echo "✅ Helm is already installed."
      fi

# Create 'helm' namespace and install NGINX Ingress Controller
- task: AzureCLI@2
  displayName: 'Install NGINX Ingress Controller via Helm'
  inputs:
    azureSubscription: 'Azure service'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "📦 Ensuring 'ingress-nginx' namespace exists..."
      kubectl get namespace ingress-nginx || kubectl create namespace ingress-nginx

      echo "🚀 Installing NGINX Ingress via Helm..."
      helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
      helm repo update
      helm upgrade --install ingress-nginx ingress-nginx/ingress-nginx \
        --namespace ingress-nginx \
        --set controller.publishService.enabled=true

# Install Argo CD in 'argocd' namespace
- task: AzureCLI@2
  displayName: 'Install Argo CD'
  inputs:
    azureSubscription: 'Azure service'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "📦 Creating namespace '$(argoNamespace)' if it doesn't exist..."
      kubectl get namespace $(argoNamespace) || kubectl create namespace $(argoNamespace)

      echo "🚀 Installing Argo CD..."
      kubectl apply -n $(argoNamespace) -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

      echo "✅ Argo CD installation complete."
